<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.macaku.center.mapper.TeamOkrMapper">

    <resultMap extends="BaseResultMap" id="KeyResultsMap" type="com.macaku.center.domain.vo.TeamOkrStatisticVO">
        <result property="isOver" column="is_over" jdbcType="BIT"/>
        <collection property="keyResults" ofType="com.macaku.core.domain.po.inner.KeyResult"
                    resultMap="com.macaku.core.mapper.inner.KeyResultMapper.BaseResultMap" columnPrefix="k_" />
    </resultMap>

    <select id="selectChildTeams" resultMap="BaseResultMap" >
        call GetTreeNodes(#{id,jdbcType=BIGINT})
    </select>

    <select id="findRootTeam" resultMap="BaseResultMap">
        call find_root_node(#{id,jdbcType=BIGINT})
    </select>

    <select id="getTeamOkrList" parameterType="java.lang.Long" resultType="com.macaku.center.domain.vo.TeamOkrVO">
        select
            t.id, o.id, t.team_name, o.is_over, t.create_time, t.update_time
        from user u, team_okr t, okr_core o, team_personal_okr tp
        where
            u.id = #{id,jdbcType=BIGINT}
          and u.is_deleted = 0 and t.is_deleted = 0 and o.is_deleted = 0 and tp.is_deleted = 0
          and u.id = tp.user_id
          and t.core_id = o.id
          and tp.team_id = t.id
        order by o.is_over, o.create_time desc
    </select>
    <select id="selectKeyResultsByTeamId" resultMap="KeyResultsMap">
        select
        t.id, t.core_id, t.team_name, t.parent_team_id, t.manager_id, t.create_time, o.is_over,
        k.id k_id, k.first_quadrant_id k_first_quadrant_id,
        k.content k_content, k.probability k_probability
        from
        team_okr t, okr_core o,
        first_quadrant f left join key_result k on f.id = k.first_quadrant_id
        where
        t.is_deleted = 0 and f.is_deleted = 0 and o.is_deleted = 0 and (k.is_deleted = 0 or k.is_deleted is null)
        and t.id in
        <foreach collection="ids" open="(" close=")" item="id" separator=",">
            #{id,jdbcType=BIGINT}
        </foreach>
        and t.core_id = o.id
        and f.core_id = o.id
        order by t.id
    </select>
</mapper>
